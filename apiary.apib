FORMAT: 1A
HOST: https://api-qa.dhlecommerce.com

AUTHOR: DHL eCOMMERCE
VERSION: 0.1
NAME OF THE CALL: Global DHL eCommerce API
SUB CALLS WITHIN: Shipping, Fulfillment
TARGET RELEASE OR GOLIVE: 01.06.2017
TYP: External Webservice
BELONGS TO API DOMAIN: Main DHL eCommerce Domain
MINIMUM INPUT PARAMETERS: Too many to list here... see individual calls
MINIMUM OUTPUTS PARAMETERS: Too many to list here... see individual calls
FINAL LINK: http://api.dhlecommerce.com
IT_LEAD: Martin Borriss & Pavel Holy
BUSINESS_LEAD: Frank Josefiak




# (NEW) Global DHL eCommerce API
Welcome at the global DHL eCommerce API. <br/><br/>
To find out more about the logistic services we offer, please check out [DHL eCommerce Products](http://www.dhl.com/eCommerce). <br/><br/>
To [Sign up](#introduction/access-&-sign-up) for becoming a DHL eCommerce API consumer and receive your credentials, please contact us via: [integration@dhl.com](mailto:Integration@dhl.com). 
Ideally provide your DHL eCommerce customer account number.<br/><br/>
You can contact us [here](#introduction/access-&-sign-up) for more details.<br/><br/> 

To find out more about **alternative integration channels**, as for example our file-based EDI integrations for high volume data exchange or the multiple third party solutions, we offer towards typical ERP systems, Webshop systems, etc,. please check out our [global integration website](http://www.dhl.com/integration).
___


## About this API
DHL eCommerce provides this **global API** to enable open integration channels for our customers, clients and partners. <br/><br/>
The API is provided as **REST API** using **OAuth 2.0** for authentication and authorization and **JSON format** for request and response messages.<br/><br/>
The API uses **HTTPS (over SSL) protocol**, the HTTP GET is used to retrieve data and HTTP POST is used to create, update or delete data. 
<br/>
    
    >**Note:** *Usage of HTTP PUT and DELETE is not enabled.*

The **service endpoints** available via this APIs have been build along side your eCommerce experience as underneath graphic indicates:

|   |                                           | 
|---| ------------------------------------------|
| <a href="#reference/authentication"><img src="https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/images/API_CustomerJourney_Authentication.png" /> </a>  |<img src="https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/images/API_CustomerJourney_ValueAdd.png"  />  </br> <a href="#reference/fulfillment"><img src="https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/images/API_CustomerJourney_Fulfillment.png" /> </a> </br> <a href="#reference/shipping"><img src="https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/images/API_CustomerJourney_Shipping.png" /> </a>|

___

## Get Started
1. [Sign up](#introduction/access-&-sign-up) for becoming a DHL eCommerce API consumer and receive your credentials. <br/><br/>
    >**Note:** *Please provide your DHL eCommerce customer account number in your sign up request.*
2. After signing up [Get Your Access Token](#reference/authentication).
3. Understand our [Environments](#introduction/available-environments) setup.
4. Construct your REST API request, using our access-&-sign-up API reference documenation for existing API service domains [Shipping](#reference/shipping) and [Fulfillment](#reference/fulfillment).


## Available environments
DHL eCommerce provides **Production** environment as well as **Sandbox** for development and testing.<br/><br/> 
Access to both environments is managed and you have to use OAuth 2.0 `Access Token`, when accessing the API resources. <br/><br/>
Access Token could be requested via [Get Access Token API](#introduction/access-&-sign-up), where you have to provide your API credentials: `Client_ID` and `Client_Secret`. 

>**Note:** *You will have different identities for Production and Sandbox environment.*


### Sandbox
You can use the Sandbox environment for development and testing purpose.<br/><br/>
**Sandbox Base URL:** `https://api-qa.dhlecommerce.com`<br/><br/>
Sandbox provides the same APIs as Production environment. 
>**Note:** *The APIs exposed on Sandbox could be called directly from this documentation.*

For ease of access you can leverage the default API credentials:<br/>
 
`Client_id: e9ed82a8-4237-4185-8e36-47264aa9e718`

`Client_secret: b1ed1bfa-689b-4d5b-bbf2-39dde64ccb64`<br/>

which could be used to request Access Token for the Sandbox APIs. 

![TEST- or SANDBOX ENVIRONMENT](https://api-qa.dhlecommerce.com/apidoc/images/sandbox.png)
>**Note:** *Please have in mind that these credentials have more strict rate limits applied, therefore you can experience 429 HTTP Status code.*

### Production
For production purpose you have to use Production environment.<br/><br/>
**Production Base URL:** `https://api.dhlecommerce.com` <br/>

Production evironment hosts the same APIs as Sandbox, but with different base URL.

![PRODUCTION ENVIRONMENT](https://api-qa.dhlecommerce.com/apidoc/images/prod.png)
>**Important note:** *Please keep in mind that Sandbox credentials does not apply for production environment and you have to use production set of credentials provided to you during onboarding.*

### Rate limits

For all API calls there is a rate limit applied.<br/><br/> 
Default limit is set to for each client to **5 requests** per second per API call. <br/><br/>
When the limit is reached you will recieve an HTTP Status code 429: Too many requests.

**HTTP Response Status Code 429**

````
{
"reasons": [{"msg" : "Too many requests in a given amount of time"}],
"details": {
            "msgId": "Id-135725589d........."
            }
}
````
___

## Access & Sign up
To request access for our Production and Sandbox environments you have to sign up.<br/> 

To sign up with your DHL eCommerce `customer account number` and obtain obtain the credentials please contact us directly via [api.ecom@dhl.com](mailto:api.ecom@dhl.com). 

>**Note:** *DHL eCommerce `customer account number` is required for the API sign up processs. To get your `customer account number` please get in touch with your regional DHL eCommerce sales organisation.*


>**Note:** *The Sandbox environment is accessible directly from this documentation page, where you can leverage the predefined test requests in [Reference](#reference/authentication) section.*

___

## Versioning & Release notes
Here on this page, the latest version of our global DHL eCommerce API is beeing documented. Currently this is **V.1**. Older versions do not yet exist - as soon as a newer version is published, the release notes as well as the links to older version is shown underneath.

<!---
___

## API Health (...tbd)
We as DHL eCommerce constantly monitor our APIs performance to keep it up all the time and with the maximum response times. In case there is the unlikely event of a downtime or a non perfect reponse time, please check the underneath status on single call level:

| API GROUP             | STATUS    | UPTIME        |RESPONSE TIME  |
| ----------------------|-----------|---------------|---------------|
**Authenthification**   |  ![AUTH](http://utzfu.synology.me/DHL/APIARY/up.png)   |    98.4%      |122ms          |
**Shipping**            |  ![SHIP](http://utzfu.synology.me/DHL/APIARY/slow.png)    |    100%       |1232ms         |
**Fullfillment**        |  ![eFF](http://utzfu.synology.me/DHL/APIARY/up.png)    |    99.32%     |133ms          |
**VAS**                 |  ![VAS](http://utzfu.synology.me/DHL/APIARY/down.png)      |    0%         |NA             |
-->
___


## Help, Links & Support
Coding against logistic APIs is not always fun - we know! To ensure you the best possible support, we developed a variety of options for you, to resolve any issues experienced. Underneath, we give you an overview on where you might find help for any possible question comming up on your side of the screen: 
- *Products and services* offered by DHL eCommerce and where to get more information on if they are available at your location, what they offer you and your customers etc. via: http://www.dhl.com/eCommerce 
- *Glossary & Logistic terms* can be confusing too - so get a good, searchable overview on all the specific terms we use, please check the consolidated Glossary of DHL eCommerce here: http://www.dhl.com/integration-glossary
- *Frequently asked questions* on our API are listed on http://www.dhl.com/integration-faqs - so please check if other user might have had the same question as you before.
- *Integration Alternatives* might come into place if you identify integration requirements on your side that can not be sufficiently covered by our API. So you might experience extremely growing shipping volumes that make you favor more efficienct file based integrations. DHL eCommerce also offers webbased user interfaces to manage and process your orders and shipments as well as a variety of standard integrations into the most commonly used webshop systems. If you need more information on those alternatives, check out our integration page via: http://www.dhl.com/integration. Furthermore, if you are a customer exclusivily working out of the Asia-Pacific region or out of the US, you can also use our DHL eCommerce regional APIs: (Asia-Pacific) https://sandbox.dhlecommerce.asia/API/docs/v2/overview.html or for the (US) http://api.dhlglobalmail.com/docs/v2/. Please also bear in mind that from a mid to longterm perspective we will migrate both regional APIs into our global one.
- *Contacting us* somehow requires you to get in touch with your regional sales organisation since they can forward you to your local integration expert knowing your requirements best. Alternatively, you can also get in touch with us via an email to integration@dhl.com. To get most efficient support here, please let us know your DHL eCommerce customer account number as well as your local distribution center. Please bear in mind that we can only support your DHL eCommerce related inquires here, so for DHL Express, DHL Paket or other DHL business units, please approach your local business partner first - thanks in advance!

# Group API Responses
Eachtime you request our API you receive one of HTTP response code listed underneath.<br/><br/>
In case you do not get any response code back at all, please check the [API health](#introduction/api-health) first to see whether or not there is an issue on our backend side. <br/><br/>
In case the API status is **live**, please check the calls you composed, your links as well as the credentials or token used.<br/><br/>
___
- **200** `OK` - the request was successful (some calls may also return 201 instead).
___
- **201** `Created` - the request was successful and a resource was created.
___
- **204** `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
___
- **400** `Bad Request` - the request could not be understood or was missing required parameters. An invalid URI parameters or querystring was used.
___
- **401** `Unauthorized` - authentication failed or user doesn't have permissions for requested operation. Invalid client id and secret provided
___
- **402** `Unauthorized` - Some tesxt
___
- **403** `Forbidden` - access denied.
___
- **404** `Not Found` - resource was not found.
___
- **405** `Method Not Allowed` - Requested method is not supported for resource.
___
- **429** `Too many requests` -  You called the API too often in a given timeframe and exceeded the rate limits.
___
- **503** `Service unavailable` - The service you requested is not available
___


# Group Authentication

The API provides OAuth 2.0 Access Token with various authorization scopes. The Access Token can be used to authorize access for the DHL eCommerce Global APIs.

## Access Token [/v1/auth/accesstoken]

### Get Access Token [GET]

The Get Access Token API call provides OAuth 2.0 Bearer token with authorization scope, assigned to your client id, which will grants you an access to the Global DHL eCommerce APIs.

The API operation is secured by HTTP Basic authentication, therefore you have to provide **client_id** and **client_secret** as an username and password, when calling the API.

**Example:**
        
1. You will receive `client_id` and `client_secret` from DHL representative in following format.<br/>
Credentials bellow could be used in this Sandbox environment to get the Access Token.
    ````
    Client_id: e9ed82a8-4237-4185-8e36-47264aa9e718
    Client_secret: b1ed1bfa-689b-4d5b-bbf2-39dde64ccb64
    ````
2. When passing the `client_id` and `client_secret` via HTTPS request, using HTTP Basic authentication, you have to
populate HTTP Header Authorization in following format.

    > **Note:** *`Client_id` and `client_secret` has to be encoded in base64-encoding. There is a `space` characeter between Basic and the base64-encoded string. There is a `:` character between the client_id and client_secret, when encoded in base64-encoding.*
    
    ````
    Authorization: Basic base64-encoded(client_id:client_secret)
    Authorization: Basic ZTllZDgyYTgtNDIzNy00MTg1LThlMzYtNDcyNjRhYTllNzE4OmIxZWQxYmZhLTY4OWItNGQ1Yi1iYmYyLTM5ZGRlNjRjY2I2NA==
    ````
    > **Note:** *You can test the Get Access Token API directly from the documentation page. The Authorization HTTP Header was populated for you in the Console View on the right side of the screen.* 

3. You will receive following response in the JSON format.

    ````
      {
      "access_token": "FPOJnYACcqZV8YL5Vkm4Ae7nJMvWZDWOJBvD0rtM15BgttWgQEplsQ",
      "token_type": "Bearer",
      "expires_in": 18000,
      "scope": "efulfillment"
      }
    ````      
    
Understanding of the response fields:
  
`access_token:` Contains Access Token string for the Fulfillment API authentication and authorization.<br/><br/>

`token_type:` Type of the OAuth 2.0 access token. Default value is "Bearer".<br/><br/>

`expires_in:` Time to live of the access token. Default value is 18000 seconds / 5 hours. After this time the token expires. <br/><br/>

`scope:` Authorization scope of access token. Default value for Fulfillment API is "efulfillment". Could contain multiple scope values, which will be separated by space character.<br/><br/>
     

+ Request
    There is no body for the request, the API operation will return the Access Token in the Response, when the GET request will be authenticated via HTTP Basic by providing [client_id] and client_secret 

      + Headers
    
            Accept: application-json
            Authorization: Basic ZTllZDgyYTgtNDIzNy00MTg1LThlMzYtNDcyNjRhYTllNzE4OmIxZWQxYmZhLTY4OWItNGQ1Yi1iYmYyLTM5ZGRlNjRjY2I2NA==
            
    
+ Response 200 (application/json)

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    + Body
            
            {
                "access_token":"BvRVUq77c1ubeTqCABXz4daftyFPElLZ5kvLeQqRNb5nT2iFi6aU4L",
                "token_type":"Bearer",
                "expires_in":18000,
                "scope":"shipping label"
            }
        

## Access Token Info [/account/v1/auth/accesstoken/info{?token}]

### Get Access Token Info [GET]

The Get Access Token Info API call provides an information about the issued token.

+ Parameters
    + token (optional, string) ... Access Token string
    
+ Response 200 (application/json)
Successful response in case you provided valid Access Token

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    
    + Body
    
            {
              "audience" : "b0601394-d106-4bca-a825-af40b7422640",
              "user_id" : "b0601394-d106-4bca-a825-af40b7422640",
              "scope" : "shipping",
              "expires_in" : 15951
            }
        

+ Response 400 (application/json)
Bad request in case you provided token, which already expired.

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    
    + Body
        
            {
              "error" : "invalid_token",
              "error_description" : "The presented token is invalid or expired."
            }


+ Response 400 (application/json)
Bad request in case you did not provided the expected URI parameter.

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    
    + Body       
    
            {
              "error" : "invalid_request",
              "error_description" : "The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed."
            }

## Revoke Access Token [/account/v1/auth/accesstoken/revocation{?token}]

### Revoke Access Token [GET]

The Revoke Access Tokne API call provides you an option to revoke your Access Token, which not yet expired.

+ Parameters
    + token (optional, string) ... Access Token string
    
+ Response 200 (application/json)

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    + Body
    
            [
                {
                    "message":"Access token revocation processed."
                }
            ]
            

## KPS Management [/account/v1/kps/{store}/{userId}]

### Get User [GET]

The Get All Users API call returns all user ids, which are stored in the particular KPS Store.

+ Parameters
    + store (required, string) ... KPS user store
    + userId (optional, string) ... User Id
    
    
+ Response 200 (application/json)

    + Headers
        
            X-CorrelationId: Unique transaction id of your request
    + Body
    
             [
                {
                    "auth_scope": "scope1",
                    "user_id": "testUser1",
                    "password": "*****"
                },
                {
                    "auth_scope": "scope2",
                    "user_id": "testUser2",
                    "password": "*****"
                }
            ]


# Group Fulfillment
The Fulfillment API provides you an interface for the order management operations.

**API Authentication:** All API operations require `Access Token` to be passed in the Authorization Header for each request. The token type is an OAuth 2.0 Bearer token.<br/><br/> 
>**Note:** *[here](#reference/authentication) you can find more information how to to retrive the `Access Token`.* 

**Access Token Lifecycle:** When you recieve an Access Token, it is valid for defined amount of time (5h).<br/><br/> 
During this time you don't have to request new token per each request, but you can simply reuse the same token to access API resources, until the token expires.<br/><br/> 
The invalid token or token expiration will be indicated by HTTP Status Code 401 Unauthorized, then your application has to request new Access Token.

**API Parameters:** The parameters could be mandatory, optional and conditionally-optional. The conditionally-optional parameters are marked as optional parameters, where at least one or a combination has to be part of the API call. <br/><br/>
The specific list of conditionally-optional parameters will be highlighted in a table in each particular API operation section.

**API JSON Schemas:** Here you can download full archive of the JSON Schemas for the Fulfillment API.
___
| Schemas to download | Description    | URL Link  |
| --------------------|----------------|-----------|
`Request Schemas`     | Request schemas description           | [download](https://api-qa.dhlecommerce.com/efulfillment/v1/schema/request)       |
`Response Schemas`    | Response schemas description           | [download](https://api-qa.dhlecommerce.com/efulfillment/v1/schema/response)       |
`API definition`      | API definition in swagger 2.0           | [download](https://api-qa.dhlecommerce.com/efulfillment/v1/swagger)       |
___
**Required Parameters:** 

| Parameter        | Type           | Description  |Example  |
| -----------------|----------------|--------------|---------|
`XXX`        | XXX                  | XXX       |XXX        |

___
**Available API calls:**
INTRODUCTIONTEXT2

## Item [/efulfillment/v1/item]

**Implementation Examples:** 
- *Add a new product to your portfolio*: XXXXX
- *Change parameters within a selected item*: XXXXX
- *Get the latest list of items managed*: XXXXX
___
**Available API calls:**
INTRODUCTIONTEXT2

### Create item [POST]
The API operation for Create Item.

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
            
    + Body
    
            {
            "CreateItem": {
                "ItemID": "05207996",
                "ItemDetails": {
                    "IsSubstitutionAllowed": false,
                    "UnitOfMeasure": "EA",
                    "IsInsert": false,
                    "IsReturnable": false,
                    "IsFragile": true,
                    "ItemStatus": "3000",
                    "ShortDescription": "this is short description",
                    "UnitCost": {
                    "Currency": "USD",
                    "Amount": 1.1
                },
                "IsSubstitutionAutomatic": false
                },
                "AccountNumber": "5116664"
                }
            }


    + Attributes (CreateItemReq)

+ Response 200 (application/json)
    
    + Headers 
            

    + Body
            
            {
                "message": "Item created"
            }

+ Response 400 (application/json)
    
    + Headers 
            
    
    + Body
            
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 

    
    + Body
            
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 
    
    
    + Body
            
            {
                "message": "Too many requests in given amount of time"
            }
    
+ Response 503 (application/json)
    
    + Headers 
    
    
    + Body
            
            {
                "message": "Service Unavailable"
            }

### Get Item list [GET /efulfillment/v1/item/list/{accountNumber}{?itemId}]

The API operation for Get Item List. The optional parameters of the API operation are conditional. Following combinations of are allowed, when calling the API operation.

|Input Parameters   |Returned Values|
|-------------------|---------------|
|accountNumber      |Returns items by account number|
|accountNumber && itemId|Returns item by account number and item id|
|accountNumber && status && page|Returns page with filtered items by status and account number. **Page is optional.**|

+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + itemId: `NIKE007SPEC4` (string, optional) - Item Id

+ Request (application/json)
There is no body for the request.    
    
    + Headers 
        
            Accept: application/json
            Authorization: Bearer [token]
            
+ Response 200
    
    + Headers 
            
            Content-Type: application/json

    + Attributes (ItemListRes)

+ Response 400
    
    + Headers 
            
            Content-Type: application/json

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }
    
+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Update Item [POST /efulfillment/v1/item/update]
The API operation for Update Item

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

    + Body
    
            {
            "UpdateItem": {
            "AccountNumber": "5116664", 
                "ItemID": "05207996", 
                                               "ItemDetails": {
                     "ShortDescription": "API TEST ITEM4 by AG",
                     "LongDescription": "LONG API TEST ITEM by AG",
                     "ProductCategory": "a",
                     "UnitOfMeasure": "EA",
                     "CountryOfOrigin": "CZ",
                     "Color": {
                        "Code": "a",
                        "Name": "a"
                     },
                     "Image": {
                        "Location": "http://www.dhl.com/img/meta/dhl_logo.gif",
                        "Label": "DHL",
                        "Identifier": "DHL"
                     },
                     "IsReturnable": true,
                     "IsSubstitutionAllowed": false,
                     "IsSubstitutionAutomatic": false,
                     "IsFragile": true,
                     "ReturnWindow": 1,
                     "SizeCode": "a",
                     "ItemStatus": "3000",
                     "PhysicalInformation": {
                        "Height": 56,
                        "Length": 200,
                        "Width": 110.5,
                        "Weight": 150,
                        "WeightUnitOfMeasure": "GRAM",
                        "DimensionUnitOfMeasure": "CM"
                     },
                     "UnitCost": {
                        "Amount": 1.1,
                        "Currency": "EUR"
                     },
                     "IsInsert": true,
                     "IsTempSensitive": true,
                     "AdditionalQC": true,
                     "AdditionalPackslipVerbiage": true,
                     "GenderGroup": "GENDER_GROUP",
                     "GenderAge": "20"
                  },
                  "Classification": {
                     "HarmonizedCode": "1111.11.1111",
                     "HazmatClass": "01",
                     "Model": "a"
                  }
               }
            }

    + Attributes (UpdateItemReq)
    
+ Response 200 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Item updated"
            }

+ Response 400 (application/json)
    + Headers 
    

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)

    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    + Headers 
    

    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }
    
+ Response 503 (application/json)
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }


## Sales Orders [/efulfillment/v1/order]
INTROTEXT
___
**Required Parameters:** 

| Parameter        | Type           | Description  |Example  |
| -----------------|----------------|--------------|---------|
`XXX`        | XXX                  | XXX       |XXX        |

___
**Implementation Examples:** 
- *Add a new order that is supposed to be fulfilled*: XXXXX
- *Get the latest list of sales orders*: XXXXX

___
**Available API calls:**
INTRODUCTIONTEXT2

### Create Sales Order [POST]
The API operation for Create Sales Order.

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
            
            {
                "CreateSalesOrder": {
                "MessageDateTime": "2017-07-13T13:45:50",
                "OrderSubmissionID": "01527400",
                "OrgID": "",
                "Order": {
                "OrderHeader": {
                "BillTo": {
                "EmailID": "billto@gmail.com",
                "City": "Norcross",
                "FirstName": "Jonathan",
                "LastName": "Doe",
                "AddressLine1": "5923 Peachtree Industrial Blvd",
                "ZipCode": "30092",
                "State": "GA",
                "AddressLine2": "",
                "AddressLine3": "",
                "Country": "US",
                "PhoneNumber": "1234567890"
                },
                "Shipto": {
                "EmailID": "shipto@gmail.com",
                "City": "Norcross",
                "FirstName": "DHL",
                "IDType": "a",
                "LastName": "Doe",
                "AddressLine1": "5923 Peachtree Industrial Blvd",
                "ZipCode": "30092",
                "IDValue": "a",
                "State": "GA",
                "AddressLine2": "a",
                "AddressLine3": "a",
                "Country": "US",
                "PhoneNumber": "1234567890"
                },
                "IsB2BOrder": "N",
                "OrderNumber": "71327421",
                "ShippingServiceOption": "",
                "Charges": {
                "OrderSubTotal": "1400",
                "ChargeDetail": [{
                "ChargeAmount": "123.45",
                "ChargeType": "Discount",
                "ChargeName": "Thanks"
                }],
                "OrderTotal": "1427.05",
                "CODAmount": "0",
                "TotalOrderDiscount": "5",
                "TotalShippingCharge": "9.95",
                "OrderCurrency": "USD",
                "TaxDetail": [{
                "TaxPercentage": "0",
                "TaxAmount": "0",
                "TaxName": "PST"
                }, {
                "TaxPercentage": "7.5",
                "TaxAmount": "17.1",
                "TaxName": "HST/GST"
                }],
                "TaxTotal": "17.1"
                },
                "OrderDateTime": "2016-07-26T03:27:50",
                "OrderReferenceNumber": "",
                "ShippingServiceID": "DECD 5",
                "B2BOrderReference": "B2B_ORDER_REFERENCE",
                "SalesChannel": "DeC",
                "ShipFromNode": "CA1"
                },
                "AdditionalReferences": {
                "Orderref8": "r8",
                "Orderref9": "r9",
                "Orderref4": "r4",
                "Orderref5": "r5",
                "Orderref6": "r6",
                "Orderref7": "r7",
                "Orderref1": "r1",
                "Orderref2": "r2",
                "Orderref3": "r3",
                "Orderref10": "r10"
                },
                "OrderDetails": {
                "OrderLine": [{
                "ItemID": "KM-CAFC-030",
                "OrderedQuantity": "1",
                "OrderLineNumber": "1",
                "Instruction": [{
                "Type": "DelNotes",
                "Details": "Delivery notes"
                }, {
                "Type": "VASCode",
                "Details": "VAS_CODE"
                }, {
                "Type": "VASDesc",
                "Details": "VAS_DESCRIPTION"
                }, {
                "Type": "VASDesc",
                "Details": "Hi!"
                }],
                "ItemDescription": "Desc",
                "Price": "100",
                "LotNumber": "HLR",
                "LineTotal": "100",
                "EstDeliveryDate": "2016-07-25T22:27:50",
                "TaxDetail": [{
                "TaxPercentage": "10",
                "TaxAmount": "15",
                "TaxName": "VAT"
                }],
                "ProductIDReference": ""
                }]
                }
                },
                "AccountNumber": "5116664"
                }
                }
    
    + Attributes (CreateSalesOrderReq)
    
+ Response 202 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Sales Order Accepted"
            }

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Get Back Sales Order List [GET /efulfillment/v1/order/backorderlist/{accountNumber}{?dateFrom,dateTo,page}]

The API operation for Get Back Sales Order List
The optional parameters of the API operation are conditional. 
Following combinations of are allowed, when calling the API operation.
|Input Parameters                             |Returned Values|
|---------------------------------------------|---------------|
|accountNumber                                |Returns all backordered orders|
|accountNumber && dateFrom && dateTo && page  |Returns page of backordered orders for given date range. **Page, dateFrom and dateTo are optional.**|

    
+ Parameters 
    + accountNumber: `5116664`  (string, required) - Account Number
    + dateFrom: `20170101` (string, optional) - Date From
    + dateTo (string, optional) - Date To
    + page: `1` (string, optional) - Page

+ Request (application/json)
There is no body for the request.    
    
    + Headers 
           
            Accept: application/json
            Authorization: Bearer [token]
        
+ Response 200 (application/json)
    
    + Headers 


    + Attributes (BackOrderListRes)

+ Response 400 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)

    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)

    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 

    
    + Body
        
            {
                "message": "Service Unavailable"
            }

### Sales Order Acknowledgement [GET /efulfillment/v1/order/acknowledgement/{accountNumber}/{orderNumber}/{orderSubmissionId}]

The API operation for Get Sales Order Acknowledgement

    
+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + orderNumber: `esb10012018`  (string, required) - Sales Order Number
    + orderSubmissionId: `1`  (string, required) - Sales Order Submission Id   

+ Request (application/json)
There is no body for the request.    
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 


    + Attributes (SalesOrderAcknowledgementRes)

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }


### Sales Order Status [GET /efulfillment/v1/order/status/{accountNumber}{?orderNumber,dateFrom,dateTo,status,page}]

The API operation for Get Sales Order Status
The optional parameters of the API operation are conditional. 
Following combinations of are allowed, when calling the API operation. 
|Input Parameters                     |Returned Values|
|-------------------------------------|---------------|
|orderNumber                          |Returns status of given order|
|status && page                      |Returns page with filtered orders by status. **Page is optional.**|\n|dateFrom && status && page          |Returns page with filtered orders from defined date. **Status and page are optional.**|\n|dateTo && status && page            |Returns page with filtered orders by status and to defined date. **Status and page are optional.**|\n|dateFrom && dateTo && status && page|Returns page with filtered orders by status for defined date range. **Status and page are optional.**|\n"

+ Parameters 
    + accountNumber: `5116664`  (string, required) - Account Number
    + orderNumber: `TEST07032`  (string, optional) - Sales Order Number
    + dateFrom: `20170101` (string, optional) - Date From
    + dateTo: `20180101` (string, optional) - Date To
    + status: `Created` (enum[string], optional) - Status
        + Members
            + `Reserved`
            + `Cancelled`
            + `Scheduled`
            + `Back Ordered`
            + `Released`
            + `Sent to Node`
            + `Shipped`
            + `Held`
            + `Ready for WMS`
            + `Waved`
            + `Picked`
            + `Manifested`
            + `Created`            
    + page: `1` (string, optional) - Page

+ Request (application/json)
There is no body for the request. 
    
    + Headers 
            
            Authorization: Bearer [place OAuth access token here, without brackets]

+ Response 200 (application/json)
    
    + Headers 


    + Attributes (SalesOrderStatusRes)

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Sales Order Details [GET /efulfillment/v1/order/details/{accountNumber}/{orderNumber}]
The API operation for Get Sales Order Details

    
+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + orderNumber: `esb10012018` (string, required) - Sales Order Number

+ Request (application/json)
There is no body for the request. 

    + Headers 
            
            Authorization: Bearer [place OAuth access token here, without brackets]
    
+ Response 200 (application/json)
    
    + Headers 


    + Attributes (SalesOrderDetailsRes)

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

## Purchase Order [/efulfillment/v1/purchaseorder]

### Create Purchase Order [POST]
The API operation for Create Purchase Order.

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
        
            {
                "CreatePurchaseOrder": {
                "MessageDateTime": "2016-10-14T01:00:00",
                "AccountNumber": "5116664",
                "OrderSubmissionID": "04649040",
                "OrderHeader": {
                "BillTo": {
                "EmailID": "billto@dhl.com",
                "City": "BillToCity",
                "Country": "DE",
                "ZipCode": "123456",
                "State": "BillToState",
                "AddressLine2": "BillToLine2",
                "AddressLine3": "BillToLine3",
                "AddressLine1": "BillToLine1",
                "PhoneNumber": "+44999000"
                },
                "InvoiceNumber": "2016101401-I",
                "ShipmentTrackingNumber": "2016101401-S",
                "OrderNumber": "42721580",
                "OrderDateTime": "2016-10-14T00:00:00",
                "ExpectedDeliveryDate": "2016-10-25T10:00:00",
                "ShipFrom": {
                "EmailID": "shipfrom@dhl.com",
                "City": "Prague",
                "Country": "CZ",
                "ZipCode": "14000",
                "State": "State",
                "AddressLine2": "ALine2",
                "AddressLine3": "ALine3",
                "AddressLine1": "ALine1",
                "PhoneNumber": "+420-123-456",
                "VendorName": "Test"
                },
                "ShipTo": {
                "EmailID": "shipto@dhl.com",
                "City": "shiptocity",
                "Country": "DE",
                "ZipCode": "15000",
                "State": "shiptostate",
                "AddressLine2": "ToLine2",
                "AddressLine3": "ToLine3",
                "AddressLine1": "ToLine1",
                "PhoneNumber": "+44-111-222"
                },
                "OrderReferenceNumber": "2016101401-R",
                "CarrierName": "Carrier",
                "RequestedDeliveryDate": "2016-10-20T10:00:00",
                "ReceivingNode": "OH1",
                "NotificationEmailID": "notification@dhl.com"
                },
                "BillingAccountNumber": "5117061",
                "OrderDetails": [{
                "ItemID": "KM-CAFC-030",
                "UnitOfMeasure": "kg",
                "CountryOfOrigin": "CZ",
                "OrderLineNumber": "line1",
                "OrderedQuantity": 10,
                "CostDetails": {
                "WholesalePrice": 10.5,
                "RetailPrice": 12.5,
                "UnitCost": 5.3,
                "Currency": "EUR"
                },
                "ProductClass": "pclass",
                "RequestedDeliveryDate": "2016-10-21T10:00:00"
                }]
                }
                }
    
    + Attributes (CreatePurchaseOrderReq)
    
+ Response 200 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Purchase Order Accepted"
            }

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

###  Purchase Order Acknowledgement [GET /efulfillment/v1/purchaseorder/acknowledgement/{accountNumber}/{orderNumber}/{orderSubmissionId}]
The API operation for Get Purchase Order Acknowledgement

    
+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + orderNumber: `83100176` (string, required) - Sales Order Number
    + orderSubmissionId: `25360126` (string, required) - Purchase Order Submission Id 

+ Request (application/json)
There is no body for the request.

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 
            

    + Attributes (PurchaseOrderAcknowledgementRes)

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }


###  Cancel Purchase Order [POST /efulfillment/v1/purchaseorder/cancel]
The API operation for Cancel Purchase Order

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
        
            {
                "CancelPurchaseOrder": {
                    "AccountNumber": "5116664",
                    "OrderNumber": "25242701"
                }
            }
    
    
    + Attributes (CancelPurchaseOrderReq)
    
+ Response 200 (application/json)
    
    + Headers 

    
    + Body
    
            {
                "message": "Purchase Order Canceled"
            }

+ Response 400 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Purchase Order Details [GET /efulfillment/v1/purchaseorder/details/{accountNumber}/{orderNumber}]
The API operation for Get Purchase Order Details.

+ Parameters 
        
    + accountNumber: `5116664`  (string, required) - Account Number
    + orderNumber: `88219685` (string, required) - Sales Order Number

+ Request (application/json)
There is no body for the request.
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 
    

    + Attributes (PurchaseOrderDetailsRes)
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Purchase Order Status [GET /efulfillment/v1/purchaseorder/status/{accountNumber}{?orderNumber,dateFrom,dateTo,status,page}]
The API operation for Get Purchase Order Status.
The optional parameters of the API operation are conditional. 
Following combinations of are allowed, when calling the API operation.
|Input Parameters                     |Returned Values|
|-------------------------------------|--------------|
|orderNumber                  |Returns order by given purchase order number|
|status && page               |Returns page with filtered orders by status. **Page is optional.**|
|dateFrom && status && page      |Returns page with filtered orders by staus from defined date. **Status and page are optional.**|
|dateTo && status && page         |Returns page with filtered orders by status to defined date. **Status and page are optional.**|
|dateFrom && dateTo && status && page|Returns page with filtered orders by status for defined date range. **Status and page are optional.**|"

+ Parameters 
    + accountNumber: `5116664`  (string, required) - Account Number
    + orderNumber  (string, optional) - Sales Order Number
    + dateFrom (string, optional) - Date From
    + dateTo (string, optional) - Date To
    + status (enum[string], optional) - Status
        + Members
            + `Reserved`
            + `Cancelled`
            + `Scheduled`
            + `Back Ordered`
            + `Released`
            + `Sent to Node`
            + `Shipped`
            + `Held`
            + `Ready for WMS`
            + `Waved`
            + `Picked`
            + `Manifested`
            + `Created`            
    + page (string, optional) - Page

+ Request (application/json)

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)

    + Headers 
    

    + Attributes (PurchaseOrderStatusRes)
    
+ Response 400 (application/json)
    + Headers 
    
    
    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

### Update Purchase Order [POST /efulfillment/v1/purchaseorder/update]
The API operation for Update Purchase Order

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
            
            {
                "UpdatePurchaseOrder": {
                "OrderHeader": {
                "OrderNumber": "39746527",
                "ShipFrom": {
                "EmailID": "shipfrom@dhl.com",
                "City": "Prague",
                "Country": "CZ",
                "ZipCode": "14000",
                "State": "State",
                "AddressLine2": "ALine2",
                "AddressLine3": "ALine3",
                "AddressLine1": "ALine1",
                "PhoneNumber": "+420-123-456",
                "VendorName": "ShipFrom"
                },
                "ShipTo": {
                "EmailID": "shipto@dhl.com",
                "City": "shiptocity",
                "Country": "DE",
                "ZipCode": "15000",
                "State": "shiptostate",
                "AddressLine2": "ToLine2",
                "AddressLine3": "ToLine3",
                "AddressLine1": "ToLine1",
                "PhoneNumber": "+44-111-222"
                },
                "BillTo": {
                "EmailID": "billto@dhl.com",
                "City": "BillToCity",
                "Country": "DE",
                "ZipCode": "123456",
                "State": "BillToState",
                "AddressLine2": "BillToLine2",
                "AddressLine3": "BillToLine3",
                "AddressLine1": "BillToLine1",
                "PhoneNumber": "+44999000"
                }
                },
                "AccountNumber": "5116664"
                }
                }


    + Attributes (UpdatePurchaseOrderReq)

+ Response 200 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Purchase Order Updated"
            }
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }


## Return Order [/efulfillment/v1/returnorder/details/{accountNumber}/{orderNumber}]

### Return Order Details [GET]
The API operation for Get Return Order Details
    
+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + orderNumber: `Y100000124` (string, required) - Return Order Number

+ Request (application/json)
There is no body for this request.

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]


+ Response 200 (application/json)
    
    + Headers 
    

    + Attributes(ReturnOrderDetailsRes)
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 

    
    + Body
        
            {
                "message": "Service Unavailable"
            }


### Return Order List [GET /efulfillment/v1/returnorder/list/{accountNumber}{?orderNumber,dateFrom,dateTo,status,page}]
The API operation for Get Return Order List\n\nThe optional parameters of the API operation are conditional. Following combinations of are allowed, when calling the API operation.
|Input Parameters                                      |Returned Values|
|-------------------------------------------------------|--------------|
|accountNumber                                          |Returns orders by account number|
|accountNumber && orderNumber                          |Returns order by account number and order number|
|accountNumber && status && page                     |Returns page of filtered orders by status and account number. **Page is optional.**|
|accountNumber && dateFrom && status && page          |Returns page of filtered orders by status and account number from defined date. **Status and page are optional.**|
|accountNumber && dateTo && status && page            |Returns page of filtered orders by status and account number to defined date. **Status and page are optional.**|
|accountNumber && dateFrom && dateTo && status && page|Returns page of filtered orders by status and account number for defined date range. **Status and page are optional.**|

+ Parameters 
    + accountNumber: `5116664`  (string, required) - Account Number
    + orderNumber  (string, optional) - Sales Order Number
    + dateFrom (string, optional) - Date From
    + dateTo (string, optional) - Date To
    + status: `ReceiptClosed` (enum[string], optional) - Status
        + Members
            + `Reserved`
            + `Cancelled`
            + `Scheduled`
            + `Back Ordered`
            + `Released`
            + `Sent to Node`
            + `Shipped`
            + `Held`
            + `Ready for WMS`
            + `Waved`
            + `Picked`
            + `Manifested`
            + `Created`            
    + page: `1` (string, optional) - Page 

+ Request (application/json)

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 


    + Attributes(ReturnOrderListRes)
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

## Shipment [/efulfillment/v1/shipment/details/{accountNumber}{?orderNumber,dateFrom,dateTo,date,page}]

### Shipment Details [GET]
The API operation for Get Shipment Details.
The optional parameters of the API operation are conditional. Following combinations of are allowed, when calling the API operation. 
|Input Parameters              |Returned Values|
|---------------------------------------------|-------------------|
|accountNumber                |Returns all shipments|
|accountNumber && orderNumber        |Returns shipments for given order number|
|accountNumber && dateFrom && dateTo && page|Returns page with shipments for given date range. **Page, dateFrom and dateTo are optional.**|
|accountNumber && date && page      |Returns shipments for given date. **Page is optional.**|

    
+ Parameters 
    + accountNumber: `5116664` (string, required) - Account Number
    + orderNumber (string, optional) - Sales Order Number
    + dateFrom: `20170101` (string, optional) - Date From
    + dateTo: `20180101` (string, optional) - Date To
    + date (string, optional) - Date
    + page: `1` (string, optional) - Page 

+ Request (application/json)
There is no body for the request.

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 


    + Attributes(ShipmentDetailsRes)
    
+ Response 400 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)

    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

+ Response 200 (application/json)
    
    + Headers 


    + Attributes(ReturnOrderListRes)
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

## Stock [/efulfillment/v1/stock/{inventoryAccountNumber}/{itemId}{?node}]

### Available Stock [GET]
The API operation for Get Available Stock.
    
+ Parameters 
    + inventoryAccountNumber: `5116664` (string, required) - Inventory Account Number
    + itemId: `KMA002MD` (string, required) - Item Id
    + node: `CA1` (enum[string], optional) - Node
        + Members
            + `OH1`
            + `CA1`
            + `JP1`
            + `MX1`

+ Request
There is no body for the request.

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]

+ Response 200 (application/json)
    
    + Headers 


    + Attributes(AvailableStockRes)
    
+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Service Unavailable"
            }

### Inventory Snapshot [GET /efulfillment/v1/stock/snapshot/{inventoryAccountNumber}{?itemId,node}]
The API operation for Get Inventory Snapshot
  
+ Parameters
    + inventoryAccountNumber: `5116664` (string, required) - Inventory Account Number
    + itemId: `KMA002MD` (string, required) - Item Id
    + node: `CA1` (enum[string], optional) - Node
        + Members
            + `OH1`
            + `CA1`
            + `JP1`
            + `MX1`

+ Request (application/json)
There is no body for the request.

    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]


+ Response 200 (application/json)
    
    + Headers 


    + Attributes(InventorySnapshotRes)
    
+ Response 400 (application/json)
    
    + Headers 
    

    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }

+ Response 401 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }

+ Response 429 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }

+ Response 503 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Service Unavailable"
            }

# Group Shipping
Our global shipping API provides you with everything you need to bring your orders to your customers - for your domestic- as well as for your international ones.<br/><br/>
Starting with receiving shipping options via label creation and manifesting of your shipments to ensure a smooth handover to the creation of tracking updates - all within one API. 
You can use Shipping API for the Order Manifest and Label generation (PDF, PNG and ZPL formats).<br/><br/>


**API Authentication:** All API operations require `Access Token` to be passed in the Authorization Header for each request. The token type is an OAuth 2.0 Bearer token.<br/><br/> 
>**Note:** *[here](#reference/authentication) you can find more information how to to retrive the `Access Token`.* 

The Access Token is valid for 5h so it is not necessary to request the token for each request. Developers should implement the client application in a way that the token will be requested again only after it expires.

To use the Shipping calls, you may use the following accounts and additional settings.


|                        | Pickup account | Distribution center | Product  | Currency | JSON Request Sample | JSON Response Sample | 
| -----------------------|----------------|---------------------|----------|----------|---------------------|-------------------------|
|International Shipping  | 5317861        | HKHKG1              |    PPS   |          |    |       |
|US Domestic             | 5330434        | USATL1              |    631   |          |  [download](https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/label_json_samples/US_dom_request.json)   |    [download](https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/label_json_samples/US_dom_response.json)     |
|Thailand Domestic       | 5999999130     | THBKK1              |    PDO   |  THB     |      |       |
|Chile Domestic          | 1000000012     | CLSAN1              |    PDO   |  CLP     |  [download](https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/label_json_samples/Chile_dom_request.json)    |   [download](https://czchoapint222.prg-dc.dhl.com:6443/newapidoc/label_json_samples/Chile_dom_request.json)    |
|Vietnam Domestic        | 5248767454     | VNSGN1              |    PDO   |          |      |       |


>**Note:** *The data provided in the table below is **only** for testing purposes. For the Production API calls there must be used your individual Pickup account number and Distribution center identifier.*


## Label [/shipping/v1/label{?format,labelSize,pageSize,layout}]

Now that you know the shipping product you want to use, you can use the API calls described here to create the labels you need for this.<br/><br/>
No matter if they are domestic labels, labels for your international shipments or if it is a postal or a commercial shipment - here you will receive them all.<br/><br/>
Furthermore, by creation of the shipping label you will receive a unique tracking code for your customer that is bound to the label you created.<br/><br/>


### Create Label [POST]

Purpose of this service is to generate labels for single mail item only (single package object).<br/><br/>
The benefit of this service is that it is synchronous and returns label contents directly in the response, so it is no necessity to download the labels afterwards.<br/><br/>

___

Recommended sequence for the Label service call is following:
        
1. Use clientId to obtain token using the authentication API - see `API Authentication` description above.
2. Prepare valid JSON request document per schema. Use data above depending on your use-case.
3. Call Sandbox API. The response message will contain information form the request; additionally it may contain a tracking number (depending on product) and base64-encoded label.


+ Parameters
    + format: `PNG` (enum[string], required) - Mandatory parameter to define file format. One of PNG|ZPL|PDF
        + Members
            + `PDF` 
            + `PNG` 
            + `ZPL` 
    + labelSize: `4x6` (enum[string], required) - Mandatory parameter to difine size of the label. One of 4x6|4x4.
        + Members
            + `4x6` 
            + `4x4` 
    + pageSize: `A4` (enum[string], optional) - Conditionaly mandatory, only for PDF format. Size of the page in PDF file. One of A4|400x600|400x600.
        + Default: `A4`
        + Members
            + `A4` 
            + `400x600` 
            + `400x400` 
    + layout: `1x1` (string, optional) - Conditionaly mandatory, only for PDF format. Defines way how single labels are layouted on the PDF page. In case of pageSize=A4 it might be 4x1 or 1x1. Otherwise 1x1 is the only option.
        + Default: `1x1`
        + Members
            + `4x1` 
            + `1x1` 

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
        
            {
              "shipments": [
                {
                  "packages": [
                    {
                      "packageDetails": {
                        "packageRefName": "55555555555555555",
                        "insuredValue": 1,
                        "weight": 2,
                        "declaredValue": 250,
                        "mailType": 2,
                        "height": 30,
                        "packageDesc": "Desc111",
                        "currency": "AUD",
                        "length": 20,
                        "weightUom": "G",
                        "billingRef2": "ref 2",
                        "packageId": "fybjywwbdt",
                        "dutiesPaid": "DDU",
                        "orderedProduct": "PPS",
                        "dimensionUom": "CM",
                        "billingRef1": "ref 1"
                      },
                      "consigneeAddress": {
                        "city": "Test City",
                        "name": "Test Name",
                        "address1": "Address line 1",
                        "address2": "apt 123",
                        "phone": "555-555-5555",
                        "state": "GA",
                        "country": "IE",
                        "postalCode": "99999",
                        "email": "test@email.com"
                      },
                      "customsDetails": [
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "US",
                          "itemDescription": "Desc1",
                          "itemValue": 10.1,
                          "packagedQuantity": 10,
                          "hsCode": "555555"
                        },
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "CZ",
                          "itemDescription": "Desc2",
                          "itemValue": 20.2,
                          "packagedQuantity": 20,
                          "hsCode": "555555"
                        }
                      ],
                      "returnAddress": {
                        "city": "Test City",
                        "name": "John Returns Doe",
                        "companyName": "Test Company",
                        "country": "US",
                        "state": "GA",
                        "address1": "Address line 1",
                        "postalCode": "99999"
                      }
                    }
                  ],
                  "pickupAccount": "5317861",
                  "distributionCenter": "HKHKG1"
                }
              ]
            }
    
    + Attributes (RequestFormat)

+ Response 201 (application/json)
    
    + Headers 


    + Attributes (ResponseFormat)
    
    + Body
    
            {
                "shipments": [
                    {
                        "pickupAccount": "5317861",
                        "distributionCenter": "HKHKG1",
                        "packages": [
                            {
                                "consigneeAddress": {
                                    "name": "Test Name",
                                    "address1": "Address line 1",
                                    "address2": "apt 123",
                                    "city": "Test City",
                                    "state": "GA",
                                    "postalCode": "99999",
                                    "country": "IE",
                                    "email": "test@email.com",
                                    "phone": "555-555-5555"
                                },
                                "returnAddress": {
                                    "name": "John Returns Doe",
                                    "companyName": "Test Company",
                                    "address1": "Address line 1",
                                    "city": "Test City",
                                    "state": "GA",
                                    "postalCode": "99999",
                                    "country": "US"
                                },
                                "packageDetails": {
                                    "billingRef1": "ref 1",
                                    "billingRef2": "ref 2",
                                    "currency": "AUD",
                                    "declaredValue": 250,
                                    "dimensionUom": "CM",
                                    "dutiesPaid": "DDU",
                                    "height": 30,
                                    "insuredValue": 1,
                                    "length": 20,
                                    "mailType": 2,
                                    "orderedProduct": "PPS",
                                    "packageDesc": "Desc111",
                                    "packageId": "fybjywwbdt",
                                    "packageRefName": "55555555555555555",
                                    "weight": 2,
                                    "weightUom": "G"
                                },
                                "customsDetails": [
                                    {
                                        "itemDescription": "Desc1",
                                        "countryOfOrigin": "US",
                                        "hsCode": "555555",
                                        "packagedQuantity": 10,
                                        "itemValue": 10.1,
                                        "skuNumber": "3333333333333"
                                    },
                                    {
                                        "itemDescription": "Desc2",
                                        "countryOfOrigin": "CZ",
                                        "hsCode": "555555",
                                        "packagedQuantity": 20,
                                        "itemValue": 20.2,
                                        "skuNumber": "3333333333333"
                                    }
                                ],
                                "responseDetails": {
                                    "labelDetails": [
                                        {
                                            "packageId": "fybjywwbdt",
                                            "format": "PNG",
                                            "templateId": "FML_MANIFEST_PPS_4X6_HKG_ROW",
                                            "labelData": ""
                                        }
                                    ],
                                    "trackingNumber": "RX526203432DE"
                                }
                            }
                        ]
                    }
                ]
            }

+ Response 400 (application/json)
    
    + Headers 


    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }           
    
    + Attributes (ErrResponseFormatError)
    

+ Response 401 (application/json)
    
    + Headers 
            

    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }        
    
    + Attributes (ErrResponseFormatError)
    

+ Response 429 (application/json)
    
    + Headers 
     
       
    + Body
   
            {
                "message": "Too many requests in given amount of time"
            }
    
    + Attributes (ErrResponseFormatError)
    
        
+ Request (application/json)
    
    + Headers 
        
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
        
            {
              "shipments": [
                {
                  "packages": [
                    {
                      "packageDetails": {
                        "packageRefName": "CCCCCCCCC",
                        "insuredValue": 1,
                        "weight": 4,
                        "declaredValue": 50,
                        "mailType": 2,
                        "height": 30,
                        "packageDesc": "Desc111",
                        "currency": "AUD",
                        "length": 20,
                        "weightUom": "G",
                        "billingRef2": "ref 2",
                        "packageId": "fybjywwbdt",
                        "dutiesPaid": "DDU",
                        "orderedProduct": "PPS",
                        "dimensionUom": "CM",
                        "billingRef1": "ref 1"
                      },
                      "consigneeAddress": {
                        "city": "Test City",
                        "name": "Test Name",
                        "address1": "Address line 1",
                        "address2": "apt 123",
                        "phone": "555-555-5555",
                        "state": "GA",
                        "country": "IE",
                        "postalCode": "99999",
                        "email": "test@email.com"
                      },
                      "customsDetails": [
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "US",
                          "itemDescription": "Desc1",
                          "itemValue": 10.1,
                          "packagedQuantity": 10,
                          "hsCode": "555555"
                        },
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "CZ",
                          "itemDescription": "Desc2",
                          "itemValue": 20.2,
                          "packagedQuantity": 20,
                          "hsCode": "555555"
                        }
                      ],
                      "returnAddress": {
                        "city": "Test City",
                        "name": "John Returns Doe",
                        "companyName": "Test Company",
                        "country": "US",
                        "state": "GA",
                        "address1": "Address line 1",
                        "postalCode": "99999"
                      }
                    }
                  ],
                  "pickupAccount": "5317861",
                  "distributionCenter": "HKHKG1"
                }
              ]
            }
    
    + Attributes (RequestFormat)

+ Response 503 (application/json)
    
    + Headers 
        
    
    + Body
        
            {
                "message": "Service Unavailable"
            }

    + Attributes (ErrResponseFormatError)
    


## Order Manifest [/shipping/v1/order/manifest]
**Manifesting** (sometimes refered to as *Close-out*) describes the process of transmitting your final shipments to us before the physical transfer of the shipments.<br/><br/>
Within this process, a document (**the Manifest**) is beeing created sumarizing all the to be shipped items, their total weight as well as associated information on your account.<br/><br/>
The created document also includes your signature and a barcode. During drop-off or pick-up, this document is scanned by us.<br/><br/>

### Create Manifest [POST]
Purpose of this service is to create shipping order manifest.<br/><br/>
The shipping order manifest (SOM) API uses the same document format / JSON schema like Label service.<br/><br/> 
It does allow transmission of data for up to 1000 parcels in a single call.<br/><br/>
The recommended sequence for the SOM call is following:

    1. Use client id to obtain token using the authentication API- see `API Authentication` description above.
    
    2. Prepare valid JSON request document per schema. Use data above depending on your use-case.
    
    3. Call Sandbox API. The response message will acknowledge success or failure of the call.

+ Request (application/json)
    
    + Headers 
            
            Accept: application/json
            Authorization: Bearer [token]
    
    + Body
        
            {
              "shipments": [
                {
                  "packages": [
                    {
                      "packageDetails": {
                        "packageRefName": "55555555555555555",
                        "insuredValue": 1,
                        "weight": 2,
                        "declaredValue": 250,
                        "mailType": 2,
                        "height": 30,
                        "packageDesc": "Desc111",
                        "currency": "AUD",
                        "length": 20,
                        "weightUom": "G",
                        "billingRef2": "ref 2",
                        "packageId": "fybjywwbdt",
                        "dutiesPaid": "DDU",
                        "orderedProduct": "PPS",
                        "dimensionUom": "CM",
                        "billingRef1": "ref 1"
                      },
                      "consigneeAddress": {
                        "city": "Test City",
                        "name": "Test Name",
                        "address1": "Address line 1",
                        "address2": "apt 123",
                        "phone": "555-555-5555",
                        "state": "GA",
                        "country": "IE",
                        "postalCode": "99999",
                        "email": "test@email.com"
                      },
                      "customsDetails": [
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "US",
                          "itemDescription": "Desc1",
                          "itemValue": 10.1,
                          "packagedQuantity": 10,
                          "hsCode": "555555"
                        },
                        {
                          "skuNumber": "3333333333333",
                          "countryOfOrigin": "CZ",
                          "itemDescription": "Desc2",
                          "itemValue": 20.2,
                          "packagedQuantity": 20,
                          "hsCode": "555555"
                        }
                      ],
                      "returnAddress": {
                        "city": "Test City",
                        "name": "John Returns Doe",
                        "companyName": "Test Company",
                        "country": "US",
                        "state": "GA",
                        "address1": "Address line 1",
                        "postalCode": "99999"
                      }
                    }
                  ],
                  "pickupAccount": "5317861",
                  "distributionCenter": "HKHKG1"
                }
              ]
            }
    
    + Attributes (RequestFormat)
    
+ Response 201 (application/json)
    
    + Headers 
    
    
    + Attributes (ResponseFormat)

+ Response 400 (application/json)
    
    + Headers 
    
    
    + Body
        
            {
                "message": "Bad Request - Invalid URI parameters or querystring"
            }
    
    + Attributes (ErrResponseFormatError)

+ Response 401 (application/json)
    
    + Headers 

    
    + Body
        
            {
                "message": "Unauthorized Access - Invalid token or Authentication Header parameter"
            }
    
    + Attributes (ErrResponseFormatError)

+ Response 429 (application/json)
    
    + Headers 
        
    
    + Body
        
            {
                "message": "Too many requests in given amount of time"
            }
        
    
    + Attributes (ErrResponseFormatError)
    

+ Response 503 (application/json)
    
    + Headers 
        
    
    + Body
        
            {
                "message": "Service Unavailable"
            }
    
    + Attributes (ErrResponseFormatError)


# Data Structures

## CancelPurchaseOrderReq (object)
+ `CancelPurchaseOrder` (CancelPurchaseOrder, required) 


## CancelPurchaseOrder (object)
+ `AccountNumber` (string, required) 
+ `OrderNumber` (string, required) 


## CreateItemReq (object)
+ `CreateItem` (CreateItem, required) 


## CreateItem (object)
+ `AccountNumber` (string, required) 
+ `ItemID` (string, required) 
+ `ItemDetails` (ItemDetails, required) 
+ `Classification` (Classification, optional) 
+ `InventoryParameters` (InventoryParameters, optional) 
+ `AdditionalProductReferenceIdentifiers` (array[AdditionalProductReferenceIdentifier], optional) 


## ItemDetails (object)
+ `ShortDescription` (string, required) 
+ `UnitOfMeasure` (string, required) 
+ `IsReturnable` (boolean, required) 
+ `IsSubstitutionAllowed` (boolean, required) 
+ `IsSubstitutionAutomatic` (boolean, required) 
+ `ItemStatus` (string, required) 
+ `IsInsert` (boolean, required) 
+ `LongDescription` (string, optional) 
+ `ProductCategory` (string, optional) 
+ `CountryOfOrigin` (string, optional) 
+ `Color` (Color, optional) 
+ `Image` (Image, optional) 
+ `IsFragile` (boolean, optional) 
+ `IsModelItem` (boolean, optional) 
+ `ReturnWindow` (number, optional) 
+ `SizeCode` (string, optional) 
+ `PhysicalInformation` (PhysicalInformation, optional) 
+ `UnitCost` (UnitCost, optional) 
+ `IsTempSensitive` (boolean, optional) 
+ `AdditionalQC` (boolean, optional) 
+ `AdditionalPackslipVerbiage` (boolean, optional) 
+ `GenderGroup` (string, optional) 
+ `GenderAge` (string, optional) 


## Color (object)
+ `Code` (string, required) 
+ `Name` (string, required) 


## Image (object)
+ `Location` (string, required) 
+ `Identifier` (string, required) 
+ `Label` (string, optional) 


## PhysicalInformation (object)
+ `Height` (number, optional) 
+ `Length` (number, optional) 
+ `Width` (number, optional) 
+ `Weight` (number, optional) 
+ `WeightUnitOfMeasure` (string, optional) 
+ `DimensionUnitOfMeasure` (string, optional) 


## UnitCost (object)
+ `Amount` (number, required) 
+ `Currency` (string, optional) 


##  Classification (object)
+ `HarmonizedCode` (string, optional) 
+ `HazmatClass` (string, optional) 
+ `Model` (string, optional) 


##  InventoryParameters (object)
+ `IsSerialTracked` (boolean, optional) 
+ `OnhandSafetyFactorQuantity` (number, optional) 
+ `TagControlFlag` (boolean, optional) 
+ `UseUPCForInventory` (boolean, optional) 


## AdditionalProductReferenceIdentifier (object)
+ `ProductReference` (string, required) 
+ `Identifier` (string, required) 


## CreateSalesOrderReq (object)
+ `CreateSalesOrder` (CreateSalesOrder, required) 


## CreateSalesOrder (object)
+ `MessageDateTime` (string, required) 
+ `OrderSubmissionID` (string, required) 
+ `AccountNumber` (string, required) 
+ `Order` (Order, required) 
+ `OrgID` (string, optional) 

## Order (object)
+ `OrderHeader` (OrderHeader, required) 
+ `OrderDetails` (OrderDetails, required) 
+ `AdditionalReferences` (AdditionalReferences, optional) 

## OrderHeader (object)
+ `OrderDateTime` (string, required) 
+ `OrderNumber` (string, required) 
+ `ShippingServiceID` (string, required) 
+ `Charges` (Charges, required) 
+ `BillTo` (BillTo, required) 
+ `Shipto` (Shipto, required) 
+ `OrderReferenceNumber` (string, optional) 
+ `SalesChannel` (string, optional) 
+ `IsB2BOrder` (string, optional) 
+ `ShippingServiceOption` (string, optional) 
+ `ShipFromNode` (string, optional) 
+ `B2BOrderReference` (string, optional) 
+ `PaymentMethods` (PaymentMethods, optional) 

## Charges (object)
+ `OrderCurrency` (string, required) 
+ `OrderTotal` (string, required) 
+ `OrderSubTotal` (string, required) 
+ `TotalShippingCharge` (string, required) 
+ `TaxTotal` (string, required) 
+ `CODAmount` (string, optional) 
+ `TotalOrderDiscount` (string, optional) 
+ `TaxDetail` (array[TaxDetail], optional) 
+ `ChargeDetail` (array[ChargeDetail], optional) 

## TaxDetail (object)
+ `TaxAmount` (string, required) 
+ `TaxName` (string, required) 
+ `TaxPercentage` (string, required) 

## ChargeDetail (object)
+ `ChargeAmount` (string, required) 
+ `ChargeName` (string, required) 
+ `ChargeType` (string, required) 

## PaymentMethods (object)
+ `PaymentMethod` (array[PaymentMethod], optional) 

## PaymentMethod (object)
+ `PaymentType` (string, required) 
+ `AccountHolderName` (string, optional) 
+ `TruncatedAccountIdentifier` (string, optional) 

## BillTo (object)
+ `FirstName` (string, required) 
+ `LastName` (string, required) 
+ `AddressLine1` (string, required) 
+ `City` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `AddressLine2` (string, optional) 
+ `AddressLine3` (string, optional) 
+ `State` (string, optional) 
+ `PhoneNumber` (string, optional) 
+ `EmailID` (string, optional) 

## Shipto (object)
+ `FirstName` (string, required) 
+ `LastName` (string, required) 
+ `AddressLine1` (string, required) 
+ `City` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `AddressLine2` (string, optional) 
+ `AddressLine3` (string, optional) 
+ `State` (string, optional) 
+ `PhoneNumber` (string, optional) 
+ `EmailID` (string, optional) 
+ `IDType` (string, optional) 
+ `IDValue` (string, optional) 

## OrderDetails (object)
+ `OrderLine` (array[OrderLine], required) 

## OrderLine (object)
+ `OrderLineNumber` (string, required) 
+ `OrderedQuantity` (string, required) 
+ `ItemID` (string, required) 
+ `ItemDescription` (string, required) 
+ `Price` (string, required) 
+ `ProductIDReference` (string, optional) 
+ `LineTotal` (string, optional) 
+ `LotNumber` (string, optional) 
+ `EstDeliveryDate` (string, optional) 
+ `Instruction` (array[Instruction], optional) 
+ `TaxDetail` (array[TaxDetail], optional) 
+ `ChargeDetail` (array[ChargeDetail27], optional) 

## Instruction (object)
+ `Type` (string, required) 
+ `Details` (string, required) 

## ChargeDetail27 (object)
+ `ChargeName` (string, required) 
+ `ChargeCategory` (string, required) 
+ `AmountPerLine` (string, optional) 
+ `AmountPerUnit` (string, optional) 

## AdditionalReferences (object)
+ `Orderref1` (string, optional) 
+ `Orderref2` (string, optional) 
+ `Orderref3` (string, optional) 
+ `Orderref4` (string, optional) 
+ `Orderref5` (string, optional) 
+ `Orderref6` (string, optional) 
+ `Orderref7` (string, optional) 
+ `Orderref8` (string, optional) 
+ `Orderref9` (string, optional) 
+ `Orderref10` (string, optional) 

## CreatePurchaseOrderReq (object)
+ `CreatePurchaseOrder` (CreatePurchaseOrder, required) 

## CreatePurchaseOrder (object)
+ `MessageDateTime` (string, required) 
+ `OrderSubmissionID` (string, required) 
+ `AccountNumber` (string, required) 
+ `OrderHeader` (OrderHeader31, required) 
+ `OrderDetails` (array[OrderDetails35], required) 
+ `BillingAccountNumber` (string, optional) 

## OrderHeader31 (object)
+ `OrderNumber` (string, required) 
+ `OrderDateTime` (string, required) 
+ `ReceivingNode` (string, required) 
+ `RequestedDeliveryDate` (string, required) 
+ `ExpectedDeliveryDate` (string, required) 
+ `ShipFrom` (ShipFrom, required) 
+ `BillTo` (BillTo34, required) 
+ `OrderReferenceNumber` (string, optional) 
+ `InvoiceNumber` (string, optional) 
+ `ShipmentTrackingNumber` (string, optional) 
+ `CarrierName` (string, optional) 
+ `NotificationEmailID` (string, optional) 
+ `ShipTo` (ShipTo33, optional) 

## ShipFrom (object)
+ `VendorName` (string, required) 
+ `AddressLine1` (string, required) 
+ `City` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `AddressLine2` (string, optional) 
+ `AddressLine3` (string, optional) 
+ `State` (string, optional) 
+ `PhoneNumber` (string, optional) 
+ `EmailID` (string, optional) 

## ShipTo33 (object)
+ `AddressLine1` (string, required) 
+ `City` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `AddressLine2` (string, optional) 
+ `AddressLine3` (string, optional) 
+ `State` (string, optional) 
+ `PhoneNumber` (string, optional) 
+ `EmailID` (string, optional) 

## BillTo34 (object)
+ `AddressLine1` (string, required) 
+ `City` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `AddressLine2` (string, optional) 
+ `AddressLine3` (string, optional) 
+ `State` (string, optional) 
+ `PhoneNumber` (string, optional) 
+ `EmailID` (string, optional) 

## OrderDetails35 (object)
+ `OrderLineNumber` (string, required) 
+ `OrderedQuantity` (number, required) 
+ `RequestedDeliveryDate` (string, required) 
+ `ItemID` (string, required) 
+ `ProductClass` (string, required) 
+ `UnitOfMeasure` (string, required) 
+ `CountryOfOrigin` (string, optional) 
+ `CostDetails` (CostDetails, optional) 

## CostDetails (object)
+ `RetailPrice` (number, optional) 
+ `WholesalePrice` (number, optional) 
+ `UnitCost` (number, optional) 
+ `Currency` (string, optional) 

## UpdateItemReq (object)
+ `UpdateItem` (UpdateItem, required) 

## UpdateItem (object)
+ `AccountNumber` (string, required) 
+ `ItemID` (string, required) 
+ `ItemDetails` (ItemDetails39, optional) 
+ `Classification` (Classification, optional) 
+ `InventoryParameters` (InventoryParameters45, optional) 
+ `AdditionalProductReferenceIdentifiers` (array[AdditionalProductReferenceIdentifier], optional) 

## ItemDetails39 (object)
+ `ShortDescription` (string, optional) 
+ `LongDescription` (string, optional) 
+ `ProductCategory` (string, optional) 
+ `UnitOfMeasure` (string, optional) 
+ `CountryOfOrigin` (string, optional) 
+ `Color` (Color, optional) 
+ `Image` (Image, optional) 
+ `IsReturnable` (boolean, optional) 
+ `IsSubstitutionAllowed` (boolean, optional) 
+ `IsSubstitutionAutomatic` (boolean, optional) 
+ `IsFragile` (boolean, optional) 
+ `ReturnWindow` (number, optional) 
+ `SizeCode` (string, optional) 
+ `ItemStatus` (string, optional) 
+ `PhysicalInformation` (PhysicalInformation, optional) 
+ `UnitCost` (UnitCost, optional) 
+ `IsInsert` (boolean, optional) 
+ `IsTempSensitive` (boolean, optional) 
+ `AdditionalQC` (boolean, optional) 
+ `AdditionalPackslipVerbiage` (boolean, optional) 
+ `GenderGroup` (string, optional) 
+ `GenderAge` (string, optional) 

## InventoryParameters45 (object)
+ `OnhandSafetyFactorQuantity` (number, optional) 
+ `UseUPCForInventory` (boolean, optional) 

## UpdatePurchaseOrderReq (object)
+ `UpdatePurchaseOrder` (UpdatePurchaseOrder, required) 

## UpdatePurchaseOrder (object)
+ `AccountNumber` (string, required) 
+ `OrderHeader` (OrderHeader49, required) 
+ `BillingAccountNumber` (string, optional) 
+ `OrderDetails` (array[OrderDetails53], optional) 

## OrderHeader49 (object)
+ `OrderNumber` (string, required) 
+ `OrderReferenceNumber` (string, optional) 
+ `InvoiceNumber` (string, optional) 
+ `ShipmentTrackingNumber` (string, optional) 
+ `CarrierName` (string, optional) 
+ `NotificationEmailID` (string, optional) 
+ `ExpectedDeliveryDate` (string, optional) 
+ `ShipFrom` (ShipFrom, optional) 
+ `ShipTo` (ShipTo33, optional) 
+ `BillTo` (BillTo34, optional) 

## OrderDetails53 (object)
+ `Action` (enum[string], required) 
    + `CREATE`
    + `MODIFY`
+ `OrderLineKey` (string, optional) 
+ `OrderLineNumber` (string, optional) 
+ `OrderedQuantity` (number, optional) 
+ `RequestedDeliveryDate` (string, optional) 
+ `ItemID` (string, optional) 
+ `CountryOfOrigin` (string, optional) 
+ `ProductClass` (string, optional) 
+ `UnitOfMeasure` (string, optional) 
+ `CostDetails` (CostDetails, optional) 

## AvailableStockRes (object)
+ `AvailableStock` (AvailableStock, required) 

## AvailableStock (object)
+ `InventoryAccountNumber` (string, required) 
+ `Product` (array[Product], required) 

## Product (object)
+ `ItemID` (string, required) 
+ `ItemDescription` (string, required) 
+ `AvailableQuantity` (string, required) 

## BackOrderListRes (object)
+ `Page` (Page, required) 

## Page (object)
+ `PageNumber` (string, required) 
+ `IsValidPage` (string, required) 
+ `IsLastPage` (string, required) 
+ `TotalNumberOfOrders` (string, required) 
+ `OrderList` (OrderList, optional) 

## OrderList (object)
+ `Order` (array[Order62], required) 

## Order62 (object)
+ `AccountNumber` (string, required) 
+ `OrgID` (string, required) 
+ `MessageDateTime` (string, required) 
+ `OrderNumber` (string, required) 
+ `OrderReferenceNumber` (string, required) 
+ `OrderDateTime` (string, required) 
+ `OrderStatus` (string, required) 
+ `IsOnHold` (string, required) 
+ `HoldReasonCode` (string, required) 

## InventorySnapshotRes (object)
+ `InventorySnapshot` (InventorySnapshot, required) 

## InventorySnapshot (object)
+ `InventoryAccountNumber` (string, required) 
+ `Catalog` (array[Catalog], required) 

## Catalog (object)
+ `Product` (array[Product66], required) 

## Product66 (object)
+ `ItemID` (string, required) 
+ `ItemDescription` (string, required) 
+ `TotalInventory` (array[TotalInventory], required) 
+ `SupplyDetail` (array[SupplyDetail], required) 
+ `DemandDetail` (array[DemandDetail], optional) 

## TotalInventory (object)
+ `Type` (string, required) 
+ `Quantity` (string, required) 

## SupplyDetail (object)
+ `Node` (string, required) 
+ `Inventory` (array[Inventory], required) 

## Inventory (object)
+ `Type` (string, required) 
+ `Quantity` (string, required) 
+ `LotNumber` (string, optional) 

## DemandDetail (object)
+ `Node` (string, required) 
+ `Inventory` (array[Inventory71], required) 

## Inventory71 (object)
+ `Type` (string, required) 
+ `Quantity` (string, required) 

## ItemListRes (object)
+ `Page` (Page73, required) 
+ `Items` (array[Item], optional) 

## Page73 (object)
+ `PageNumber` (string, required) 
+ `IsValidPage` (string, required) 
+ `IsLastPage` (string, required) 
+ `TotalNumberOfItems` (string, required) 

## Item (object)
+ `AccountNumber` (string, required) 
+ `ItemID` (string, required) 
+ `ItemDetails` (ItemDetails75, optional) 
+ `Classification` (Classification, optional) 
+ `InventoryParameters` (InventoryParameters81, optional) 
+ `AdditionalProductReferenceIdentifiers` (array[AdditionalProductReferenceIdentifier], optional) 

## ItemDetails75 (object)
+ `ShortDescription` (string, optional) 
+ `LongDescription` (string, optional) 
+ `ProductCategory` (string, optional) 
+ `UnitOfMeasure` (string, optional) 
+ `CountryOfOrigin` (string, optional) 
+ `Color` (Color, optional) 
+ `Image` (Image, optional) 
+ `IsReturnable` (boolean, optional) 
+ `IsSubstitutionAllowed` (boolean, optional) 
+ `IsSubstitutionAutomatic` (boolean, optional) 
+ `IsFragile` (boolean, optional) 
+ `ReturnWindow` (number, optional) 
+ `SizeCode` (string, optional) 
+ `StyleCode` (string, optional) 
+ `ItemStatus` (string, optional) 
+ `PhysicalInformation` (PhysicalInformation, optional) 
+ `UnitCost` (UnitCost, optional) 
+ `IsInsert` (boolean, optional) 
+ `IsTempSensitive` (boolean, optional) 
+ `AdditionalQC` (boolean, optional) 
+ `AdditionalPackslipVerbiage` (boolean, optional) 
+ `GenderGroup` (string, optional) 
+ `GenderAge` (string, optional) 

## InventoryParameters81 (object)
+ `IsSerialTracked` (boolean, optional) 
+ `OnhandSafetyFactorQuantity` (number, optional) 
+ `TagControlFloag` (boolean, optional) 
+ `UseUPCForInventory` (boolean, optional) 

## PurchaseOrderAcknowledgementRes (object)
+ `CreationAcknowledge` (CreationAcknowledge, required) 

## CreationAcknowledge (object)
+ `Order` (Order85, required) 

## Order85 (object)
+ `AccountNumber` (string, required) 
+ `OrgID` (string, required) 
+ `OrderDateTime` (string, required) 
+ `OrderNumber` (string, required) 
+ `OrderReferenceNumber` (string, required) 
+ `OrderSubmission` (OrderSubmission, required) 

## OrderSubmission (object)
+ `OrderSubmissionID` (string, required) 
+ `MessageID` (string, required) 
+ `OrderCreationStatus` (string, required) 
+ `Error` (array[Error], optional) 

## Error (object)
+ `ErrorCode` (string, required) 
+ `ErrorDescription` (string, required) 

## PurchaseOrderDetailsRes (object)
+ `PurchaseOrderDetails` (PurchaseOrderDetails, required) 

## PurchaseOrderDetails (object)
+ `MessageDateTime` (string, required) 
+ `AccountNumber` (string, required) 
+ `BillingAccountNumber` (string, required) 
+ `OrderHeader` (OrderHeader90, required) 
+ `ShipFrom` (ShipFrom91, required) 
+ `BillTo` (BillTo34, required) 
+ `ShipTo` (ShipTo33, required) 
+ `OrderDetails` (array[OrderDetails94], required) 

## OrderHeader90 (object)
+ `OrderNumber` (string, required) 
+ `OrderReferenceNumber` (string, required) 
+ `InvoiceNumber` (string, required) 
+ `ShipmentTrackingNumber` (string, required) 
+ `CarrierName` (string, required) 
+ `OrderDateTime` (string, required) 
+ `ReceivingNode` (string, required) 
+ `LastChangeTimestamp` (string, required) 
+ `RequestedDeliveryDate` (string, required) 
+ `ExpectedDeliveryDate` (string, required) 
+ `OrderStatus` (string, required) 

## ShipFrom91 (object)
+ `AddressLine1` (string, required) 
+ `AddressLine2` (string, required) 
+ `AddressLine3` (string, required) 
+ `City` (string, required) 
+ `State` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `PhoneNumber` (string, required) 
+ `EmailID` (string, required) 

## OrderDetails94 (object)
+ `OrderLineNumber` (string, required) 
+ `OrderLineKey` (string, required) 
+ `OrderedQuantity` (number, required) 
+ `RequestedDeliveryDate` (string, required) 
+ `ItemID` (string, required) 
+ `CountryOfOrigin` (string, required) 
+ `ProductClass` (string, required) 
+ `UnitOfMeasure` (string, required) 
+ `OrderLineStatus` (string, required) 
+ `CostDetails` (CostDetails, required) 
+ `LotNumber` (string, optional) 
+ `Status` (string, optional) 
+ `OpenQty` (string, optional) 

## PurchaseOrderStatusRes (object)
+ `Page` (Page97, required) 
+ `PurchaseOrderList` (array[PurchaseOrderList], optional) 

## Page97 (object)
+ `PageNumber` (string, required) 
+ `IsValidPage` (string, required) 
+ `IsLastPage` (string, required) 
+ `TotalNumberOfOrders` (string, required) 

## PurchaseOrderList (object)
+ `AccountNumber` (string, required) 
+ `MessageDateTime` (string, required) 
+ `OrderNumber` (string, required) 
+ `OrderDateTime` (string, required) 
+ `OrderStatus` (string, required) 
+ `ReceivingNode` (string, required) 

## ReturnOrderDetailsRes (object)
+ `ReturnOrderDetails` (ReturnOrderDetails, required) 

## ReturnOrderDetails (object)
+ `AccountNumber` (string, required) 
+ `OrderHeader` (OrderHeader101, required) 
+ `OrderDetails` (array[OrderDetails103], required) 

## OrderHeader101 (object)
+ `OrderNumber` (string, required) 
+ `OrderDateTime` (string, required) 
+ `LastChangeTimestamp` (string, required) 
+ `OrderStatus` (string, required) 
+ `ReturnFrom` (ReturnFrom, required) 

## ReturnFrom (object)
+ `FirstName` (string, required) 
+ `LastName` (string, required) 
+ `AddressLine1` (string, required) 
+ `AddressLine2` (string, required) 
+ `AddressLine3` (string, required) 
+ `City` (string, required) 
+ `State` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `PhoneNumber` (string, required) 
+ `EmailID` (string, required) 

## OrderDetails103 (object)
+ `DerivedFromSalesOrderNumber` (string, required) 
+ `ReturnedQuantity` (number, required) 
+ `ItemID` (string, required) 
+ `ItemDescription` (string, required) 
+ `Price` (number, required) 
+ `LineTotal` (number, required) 
+ `OrderLineStatus` (string, required) 
+ `ShipNode` (string, required) 
+ `ReturnReason` (string, required) 
+ `ReturnMethod` (string, optional) 

## ReturnOrderListRes (object)
+ `Page` (Page97, required) 
+ `ReturnOrderList` (array[ReturnOrderList], optional) 

## ReturnOrderList (object)
+ `AccountNumber` (string, required) 
+ `ReturnOrderNumber` (string, required) 
+ `OrderDateTime` (string, required) 
+ `OrderStatus` (string, required) 

## SalesOrderAcknowledgementRes (object)
+ `CreationAcknowledge` (CreationAcknowledge, required) 

## SalesOrderDetailsRes (object)
+ `SalesOrderDetails` (SalesOrderDetails, required) 

## SalesOrderDetails (object)
+ `MessageDateTime` (string, required) 
+ `AccountNumber` (string, required) 
+ `OrgID` (string, required) 
+ `Order` (array[Order114], required) 

## Order114 (object)
+ `OrderHeader` (OrderHeader115, required) 
+ `OrderDetails` (OrderDetails123, required) 
+ `AdditionalReferences` (AdditionalReferences, required) 

## OrderHeader115 (object)
+ `DHLSalesOrderNumber` (string, required) 
+ `OrderStatus` (string, required) 
+ `IsOnHold` (string, required) 
+ `HoldReasonCode` (string, required) 
+ `LastChangeTimestamp` (string, required) 
+ `OrderDateTime` (string, required) 
+ `OrderNumber` (string, required) 
+ `OrderReferenceNumber` (string, required) 
+ `SalesChannel` (string, required) 
+ `IsB2BOrder` (string, required) 
+ `ShippingServiceID` (string, required) 
+ `ShippingServiceOption` (string, required) 
+ `Charges` (Charges, required) 
+ `PaymentMethods` (PaymentMethods, required) 
+ `BillTo` (BillTo, required) 
+ `Shipto` (Shipto122, required) 
+ `ShipFromNode` (string, optional) 
+ `B2BOrderReference` (string, optional) 

## Shipto122 (object)
+ `FirstName` (string, required) 
+ `LastName` (string, required) 
+ `AddressLine1` (string, required) 
+ `AddressLine2` (string, required) 
+ `AddressLine3` (string, required) 
+ `City` (string, required) 
+ `State` (string, required) 
+ `ZipCode` (string, required) 
+ `Country` (string, required) 
+ `PhoneNumber` (string, required) 
+ `EmailID` (string, required) 

## OrderDetails123 (object)
+ `OrderLine` (array[OrderLine124], required) 

## OrderLine124 (object)
+ `OrderLineNumber` (string, required) 
+ `OrderedQuantity` (string, required) 
+ `ItemID` (string, required) 
+ `ProductIDReference` (string, required) 
+ `ItemDescription` (string, required) 
+ `Price` (string, required) 
+ `LineTotal` (string, required) 
+ `OrderLineStatus` (string, required) 
+ `Instruction` (array[Instruction], required) 
+ `TaxDetail` (array[TaxDetail], required) 
+ `LotNumber` (string, optional) 
+ `EstDeliveryDate` (string, optional) 
+ `Status` (string, optional) 
+ `OpenQty` (string, optional) 

## SalesOrderStatusRes (object)
+ `Page` (Page, required) 

## ShipmentDetailsRes (object)
+ `Page` (Page133, required) 

## Page133 (object)
+ `PageNumber` (string, required) 
+ `IsValidPage` (string, required) 
+ `IsLastPage` (string, required) 
+ `TotalNumberOfOrders` (string, required) 
+ `OrderList` (OrderList134, optional) 

## OrderList134 (object)
+ `Order` (array[Order135], required) 

## Order135 (object)
+ `OrderNumber` (string, required) 
+ `Shipments` (array[Shipment], required) 

## Shipment (object)
+ `Shipment` (array[Shipment137], required) 

## Shipment137 (object)
+ `TrackingNumber` (string, required) 
+ `Service` (string, required) 
+ `SCAC` (string, required) 
+ `Shipdate` (string, required) 
+ `ShipNode` (string, required) 
+ `PackageContent` (array[PackageContent], required) 
+ `ContainerNumber` (string, optional) 
+ `OrderReferenceNumber` (string, optional) 

## PackageContent (object)
+ `ItemID` (string, required) 
+ `OriginalOrderLineNumber` (string, required) 
+ `OrderQuantity` (string, required) 
+ `ShipQuantity` (string, required) 
+ `LotNumber` (string, optional) 
+ `SerialNumber` (string, optional) 

## RequestFormat (object)
+ `shipments` (array[Shipment2], required) - Container array for one or more shipments

## Shipment2 (object)
+ `pickupAccount` (string, required) - The DHL eCommerce pickup account number. You will receive this after doing the onboarding with DHL sales.
+ `distributionCenter` (string, required) - Primary DHL eCommerce Distribution center assigned to your products/services. This will be provided during onboarding.
+ `packages` (array[Package], required) - One or more packages. At the moment, only one package is supported by the label service.
+ `consignmentNumber` (string, optional) - Customer defined number for identifying the consignment (i.e. a consolidation of parcels..

## Package (object)
+ `consigneeAddress` (ConsigneeAddress, required) - Address of the consignee.
+ `packageDetails` (PackageDetails, required) - Details of one package.
+ `returnAddress` (ReturnAddress, optional) - Address of the returns (if different from shipper)
+ `customsDetails` (array[CustomsDetail], optional) - Details for one or more customs commodities. Only applicable if orderedProduct is an International Product

## ConsigneeAddress (object)
+ `address1` (string, required) - Line 1 of the consignee's street address or delivery location
+ `city` (string, required) - Consignee's city
+ `country` (string, required) - Two-character ISO consignee address country code.
+ `address2` (string, optional) - Line 2 of the consignee's street address or delivery location
+ `address3` (string, optional) - Line 3 of the consignee's street address or delivery location - typically used for addresses to designate province, district, or neighborhood
+ `companyName` (string, optional) - Name of the institution receiving the shipment
+ `email` (string, optional) - Consignee's email address
+ `idNumber` (string, optional) - Consignee's identification number
+ `idType` (string, optional) - Denotes the type of identification number provided by the consignee for customs clearance and delivery. Note: Provide if available for DHL Parcel International Direct to S. Korea and China
+ `name` (string, optional) - Name of the person receiving the shipment
+ `phone` (string, optional) - Consignee's phone number
+ `postalCode` (string, optional) - Consignee's postal code
+ `state` (string, optional) - Consignee's state, province or territory.

## PackageDetails (object)
+ `currency` (string, required) - Three-letter ISO Currency code
+ `orderedProduct` (string, required) - Identifies the DHL eCommerce product that is to be applied to the shipment. Refer to the product matrix for a list of all available and valid products.
+ `packageId` (string, required) - Unique reference ID for shipment; also referred to as Customer Confirmation Number.
+ `weight` (number, required) - Total shipment content weight.
+ `weightUom` (enum[string], required) - The unit of measure for the weight.
    + `kg`
    + `g`
    + `lb`
    + `oz`
    + `KG`
    + `G`
    + `LB`
    + `OZ`
+ `billingRef1` (string, optional) - String of characters that can be used to aggregate billing data (may not be unique per parcel). BillingRef1 is also referred to as Reference
+ `billingRef2` (string, optional) - Secondary string of characters that can be used to aggregate billing data (may not be unique per parcel). BillingRef2 is also referred to as Batch.
+ `codAmount` (number, optional) - Amount to collect upon delivery of goods
+ `declaredValue` (number, optional) - Total declared value for the package. While not mandatory, best practice is to provide if available.
+ `deliveryConfirmationNo` (string, optional) - For future-use
+ `dgCategory` (string, optional) - Can contain the dangerous goods category but also more generic information on the contents like for example fragile. In the US just contains the dg category.
+ `dimensionUom` (string, optional) - Dimensional unit of measure for length, width, and height of the package
+ `dutiesPaid` (enum[string], optional) - Indicates whether duties and taxes for the shipment are paid by the shipper - DDP (Delivered Duties Paid), DDU (Delivered Duties Unpaid), DAP (Delivered at Place).
    + `DDU`
    + `DDP`
    + `DAP`
+ `insuredValue` (number, optional) - Total insured value of the package
+ `mailType` (enum[number], optional) - Identifies the mail type of the shipment. Refer to the mail type matrix for a list of valid mail types.
    + `2`
    + `3`
    + `6`
    + `7`
    + `8`
    + `9`
    + `20`
    + `30`
+ `packageDesc` (string, optional) - Description of the contents of the package (See reference for general categories)
+ `packageRefName` (string, optional) - For future-use
+ `service` (string, optional) - Shipments orginating and destined to the United States will default to DELCON. Signature confirmation* is also available for certain products at an additional cost (please contact your Sales representative for more details). International shipments will default to the tracking capabilties available to the product/service selected. Shipment tracking is available for all parcel products. Tracking is available through the DHL eCommerce web portal, or through the USPS tracking site.
+ `serviceEndorsement` (enum[number], optional) - Ancillary service endorsements are used to request an addressee�s new address and to provide the USPS with instructions on how to handle undeliverable-as-addressed pieces. The endorsements are the same for all classes of US Domestic mail, but the treatment and cost differ by class of mail. Use of an ancillary service endorsement on a mailpiece obligates the mailer to pay any applicable charges for forwarding, return, and separate address notification charges.
    + `1`
    + `2`
    + `3`
    + `4`
+ `height` (number, optional) - Height dimension of the package (provide if available)
+ `length` (number, optional) - Longest measurement of package (provide if available)
+ `width` (number, optional) - Width dimension of the package (provide if available)

## ReturnAddress (object)
+ `address1` (string, required) - Line 1 of the return street address
+ `city` (string, required) - Return city
+ `country` (string, required) - Two-character ISO return address country code.
+ `address2` (string, optional) - Line 2 of the return street address
+ `address3` (string, optional) - (International Only) Line 3 of the return street address
+ `companyName` (string, optional) - Name of the institution receiving the returned package
+ `name` (string, optional) - Name of the person receiving the returned package
+ `postalCode` (string, optional) - Return postal code
+ `state` (string, optional) - Return state, province or territory

## CustomsDetail (object)
+ `itemDescription` (string, required) - Detailed description of the commodity item - Used for customs clearance. Accuracy and Detail are required.
+ `packagedQuantity` (number, required) - Quantity of the same item in the package
+ `itemValue` (number, required) - The commercial value of the commodity (per each)
+ `descriptionExport` (string, optional) - Dedicated description for export customs clearance (iff required to be different from item description)
+ `descriptionImport` (string, optional) - Dedicated description for import customs clearance (iff required to be different from item description)
+ `countryOfOrigin` (string, optional) - 2-Character Country Code for Origin Manufacturer Country of the product
+ `hsCode` (string, optional) - The Harmonized Tariff Schedule is a number assigned to every possible commodity that can be imported or exported from any country. Please do not include any decimals "." in this field.
+ `skuNumber` (string, optional) - SKU #, or item code - Used for product verification on clients website during customs clearance process.

## ResponseFormat (object)
+ `shipments` (array[Shipment12], required) - Container array for one or more shipments

## Shipment12 (object)
+ `pickupAccount`: `5300000` (string, required) - The DHL eCommerce pickup account number. You will receive this after doing the onboarding with DHL sales.
+ `distributionCenter`: `USORD1` (string, required) - Primary DHL eCommerce Distribution center assigned to your products/services. This will be provided during onboarding.
+ `packages`: `USORD1` (array[Package13], required) - One or more packages. At the moment, only one package is supported by the label service.

## Package13 (object)
+ `consigneeAddress` (ConsigneeAddress, required) - Address of the consignee.
+ `packageDetails` (PackageDetails15, required) - Details of one package.
+ `returnAddress` (ReturnAddress, optional) - Address of the returns (if different from shipper)
+ `customsDetails` (array[CustomsDetail], optional) - Details for one or more customs commodities. Only applicable if orderedProduct is an International Product
+ `responseDetails` (ResponseDetails, optional) 

## PackageDetails15 (object)
+ `currency` (string, required) - Three-letter ISO Currency code
+ `orderedProduct` (string, required) - Identifies the DHL eCommerce product that is to be applied to the shipment. Refer to the product matrix for a list of all available and valid products.
+ `packageId` (string, required) - Unique reference ID for shipment; also referred to as Customer Confirmation Number.
+ `weight` (number, required) - Total shipment content weight. Whole numbers only.
+ `weightUom` (string, required) - The unit of measure for the weight.
+ `billingRef1` (string, optional) - String of characters that can be used to aggregate billing data (may not be unique per parcel). BillingRef1 is also referred to as Reference
+ `billingRef2` (string, optional) - Secondary string of characters that can be used to aggregate billing data (may not be unique per parcel). BillingRef2 is also referred to as Batch.
+ `codAmount` (number, optional) - Amount to collect upon delivery of goods
+ `declaredValue` (number, optional) - Total declared value for the package. While not mandatory, best practice is to provide if available.
+ `deliveryConfirmationNo` (string, optional) - For future-use
+ `dgCategory` (string, optional) - Can contain the dangerous goods category but also more generic information on the contents like for example fragile. In the US just contains the dg category.
+ `dimensionUom` (string, optional) - Dimensional unit of measure for length, width, and height of the package
+ `dutiesPaid` (string, optional) - Indicates whether duties and taxes for the shipment are paid by the shipper (value 'Y') or not ('N'). this is commonly known as Inco terms DDP (Delivered Duties Paid) and DDU (Delivered Duties Unpaid).
+ `insuredValue` (number, optional) - Total insured value of the package
+ `mailType` (number, optional) - Identifies the mail type of the shipment. Refer to the mail type matrix for a list of valid mail types.
+ `packageDesc` (string, optional) - Description of the contents of the package (See reference for general categories)
+ `packageRefName` (string, optional) - For future-use
+ `service` (string, optional) - Shipments orginating and destined to the United States will default to DELCON. Signature confirmation* is also available for certain products at an additional cost (please contact your Sales representative for more details). International shipments will default to the tracking capabilties available to the product/service selected. Shipment tracking is available for all parcel products. Tracking is available through the DHL eCommerce web portal, or through the USPS tracking site.
+ `serviceEndorsement` (number, optional) - Ancillary service endorsements are used to request an addressee�s new address and to provide the USPS with instructions on how to handle undeliverable-as-addressed pieces. The endorsements are the same for all classes of US Domestic mail, but the treatment and cost differ by class of mail. Use of an ancillary service endorsement on a mailpiece obligates the mailer to pay any applicable charges for forwarding, return, and separate address notification charges.
+ `height` (number, optional) - Height dimension of the package (provide if available)
+ `length` (number, optional) - Longest measurement of package (provide if available)
+ `width` (number, optional) - Width dimension of the package (provide if available)

## ResponseDetails (object)
+ `labelDetails` (array[LabelDetail], optional) 
+ `trackingNumber` (string, optional) 
+ `trackingNumberStatus` (string, optional) 

## LabelDetail (object)
+ `packageId` (string, optional) 
+ `format` (string, optional) 
+ `templateId` (string, optional) 
+ `labelData` (string, optional) 

## Reason (object)
+ `msg` (string, required) 

## Details (object)
+ `msgId` (string, required) 

## ErrResponseFormatError (object)
+ `reasons` (array[Reason], required) 
+ `details` (Details, required)